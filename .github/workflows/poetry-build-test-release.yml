name: Build, Test Release

on:
  push:
    branches: [ "main", "master" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install dependencies
      run: |
        poetry lock --no-interaction
        poetry install --no-interaction
    - name: Build
      run: |
        poetry build
    - name: Test
      run: |
        poetry run pytest
    - name: Lint with flake8
      continue-on-error: true
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 ./src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 ./src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics        
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
      with:
        ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_REGISTRY_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
        poetry publish    
